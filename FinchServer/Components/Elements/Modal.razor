@inject IJSRuntime JsRuntime

<dialog id="@_modalId" class="modal">
    <div class="modal-box">
        <h3 class="text-lg font-bold">@Title</h3>
        <div class="py-4">
            @Content
        </div>
        <div class="modal-action">
            @Actions
        </div>
    </div>
</dialog>

@code {
    
    // - Properties

    [Parameter]
    public bool IsVisible {
        get => _isVisible;
        set {
            if (_isVisible == value) return;
            _isVisible = value;
            
            JsRuntime.InvokeVoidAsync(value ? $"{_modalId}.showModal" : $"{_modalId}.close");
            IsVisibleChanged.InvokeAsync(value);
        }
    }
    
    [Parameter]
    public EventCallback<bool> IsVisibleChanged { get; set; }

    [Parameter]
    public string Title { get; set; } = "";
    
    [Parameter]
    public RenderFragment? Content { get; set; }
    
    [Parameter]
    public RenderFragment? Actions { get; set; }
    
    
    // - Private Properties

    // Identifier for the modal needs to be unique
    private readonly string _modalId = Guid.NewGuid().ToString();

    private bool _isVisible;
}