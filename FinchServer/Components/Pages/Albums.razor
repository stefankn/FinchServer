@page "/albums"

@using FinchServer.Beets
@using FinchServer.Components.Modals
@using Microsoft.EntityFrameworkCore

@inject IDbContextFactory<BeetsContext> DbContextFactory
@inject NavigationManager NavigationManager

<div class="flex flex-col gap-6">
    <div class="breadcrumbs text-sm">
        <ul>
            <li>Albums</li>
        </ul>
    </div>
    
    <div>
        <table class="table table-zebra">
            <thead>
            <tr>
                <th>Artist</th>
                <th>Title</th>
                <th>Added at</th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var album in _albums) {
                <tr>
                    <td><NavLink href="@($"/albums/{album.Id}")">@album.AlbumArtist</NavLink></td>
                    <td><NavLink href="@($"/albums/{album.Id}")">@album.Title</NavLink></td>
                    <td>@album.AddedAt.ToLongDateString()</td>
                    <td class="text-right">
                        <button class="btn btn-sm btn-square" @onclick="() => _editingAlbum = album">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-4">
                                <path stroke-linecap="round" stroke-linejoin="round" d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L6.832 19.82a4.5 4.5 0 0 1-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 0 1 1.13-1.897L16.863 4.487Zm0 0L19.5 7.125"/>
                            </svg>
                        </button>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>

<EditAlbumModal @bind-Album="_editingAlbum" OnAlbumUpdate="Update"></EditAlbumModal>

@code {
    
    // - Private Properties

    private Album[] _albums = [];
    private Album? _editingAlbum;
    

    // - Functions

    protected override async Task OnInitializedAsync() {
        if (!RendererInfo.IsInteractive) return;

        await Update();
    }

    
    // - Private Functions

    private async Task Update() {
        await using var context = await DbContextFactory.CreateDbContextAsync();
        _albums = await context.Albums.OrderBy(a => a.AlbumArtist).ToArrayAsync();

        await InvokeAsync(StateHasChanged);
    }

    private void OnAlbumSelect(Album album) {
        NavigationManager.NavigateTo($"/albums/{album.Id}");
    }
}
